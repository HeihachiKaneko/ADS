package interfaceGrafica;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;

import produtos.Cupom;
import produtos.Estoque;
import produtos.Produto;

public class InterfaceGrafica {

	private Estoque estoque = new Estoque();
	private List<Cupom> cupom = new ArrayList<Cupom>();

	public void menu() {
		while (true) {
			int opcao = Integer.parseInt(JOptionPane.showInputDialog("1 - Cadastrar Produtos\n"
					+ "2 - Listar os Produtos\n" + "3 - Adicionar Produtos\n" + "4 - Vizualizar os cupons\n"
					+ "5 - Calcular o valor dos cupons\n" + "6 - Vender Produto\n" + "7 - Sair"));

			switch (opcao) {
			case 1:
				cadastrarProdutos();
				break;
			case 2:
				mostrarProdutos();
				break;
			case 3:
				adicionarProdutos();
				break;
			case 4:
				mostrarCupons();
				break;
			case 5:
				calcularCupons();
				break;
			case 6:
				venderProdutos();
				break;
			case 7:
				System.exit(1);
				break;
			default:
				JOptionPane.showMessageDialog(null, "Você informou uma opção invalida");
				break;
			}
		}
	}

	private void cadastrarProdutos() {
		// codigo, desc, preco
		String nomeProduto = JOptionPane.showInputDialog("Informe o produto que deseja cadastrar: ");
		String id = JOptionPane.showInputDialog("Informe o codigo do produto: ");
		String descricao = JOptionPane.showInputDialog("Descricao do produto: ");
		float preco = Float.parseFloat(JOptionPane.showInputDialog("Informe o preco do produto: "));
		while (preco < 1.00) {
			JOptionPane.showMessageDialog(null, "O valor do produto não pode ser menor que R$ 1,00", "Erro",
					JOptionPane.ERROR_MESSAGE);
			preco = Float.parseFloat(JOptionPane.showInputDialog("Informe o preco do produto: "));
		}
		Produto produto = new Produto();
		produto.registrarProduto(id, preco, descricao, nomeProduto);
		estoque.addProduto(produto);
	}

	private Produto pedirProduto() {
		Produto selecionarProduto = null;
		String idProduto = JOptionPane.showInputDialog("Informe o codigo do produto");
		for (Produto produto : this.estoque.getProdutos()) {
			if (produto.getId().equals(idProduto)) {
				selecionarProduto = produto;
			} else if (produto.getNome().equalsIgnoreCase(idProduto)) {
				selecionarProduto = produto;
			}
		}
		return selecionarProduto;
	}

	private void mostrarProdutos() {
		String produtos = "";
		for (Produto produto : this.estoque.getProdutos()) {
			produtos += "Produto: " + produto.getNome() + "\n" + "ID: " + produto.getId() + "\n" + "Preço: "
					+ produto.getPreco() + "\n" + "Quantidade: " + produto.getQuantidade() + "\n" + "Descrição: "
					+ produto.getDescricao() + "\n" + "\n";
		}

		JOptionPane.showMessageDialog(null, produtos);
	}

	private void adicionarProdutos() {
		Produto produto = this.pedirProduto();
		if (produto != null) {
			int quantity = Integer
					.parseInt(JOptionPane.showInputDialog("Quantos produtos quer adicionar ao estoque ?"));
			produto.addQuantidade(quantity);
			JOptionPane.showMessageDialog(null, "O produto foi adicionado");
		} else {
			JOptionPane.showMessageDialog(null, "Voce digitou um produto ou codigo inexistente");
		}

	}

	private void mostrarCupons() {
		if (this.cupom.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Não existem cupons cadastrados");
        } else {
            String message = "";
            int count = 1;
            for (Cupom coupom : this.cupom) {
                message += "Cupom: " + count + "\n" + "Produto: " + coupon.getProduct() + " quantidade: "
                        + coupon.getQuantity() + " valor: " + coupon.getValor() + "\n";
                count++;
            }
            JOptionPane.showMessageDialog(null, message);
        }
	}

	private void calcularCupons() {

	}

	private void venderProdutos() {

	}

}
